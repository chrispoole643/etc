# -*- mode: shell-script -*-
# chris1 prompt theme

prompt_chris1_help () {
  cat <<'EOF'
This prompt is color-scheme-able.  You can invoke it thus:

  prompt chris1 [<color1> [<color2> ]]

where the colors are for the user@host background and current working directory.

Heavily based on prompt adam1.
This prompt was stolen from Colin Walters <walters@debian.org>,
who gives credit to Michel Daenzer <daenzer@debian.org>.
EOF
}

prompt_chris1_setup () {
  prompt_chris1_color1=${1:-'red'}
  if [ "$SSH_TTY" ]; then;
      prompt_chris1_color1='blue'
  fi
  prompt_chris1_color2=${2:-'boldyellow'}

  base_prompt="%K{$prompt_chris1_color1}%n@%m%k "
  post_prompt="%b%f%k"

  base_prompt_no_color=$(echo "$base_prompt" | perl -pe "s/%(K{.*?}|k)//g")
  post_prompt_no_color=$(echo "$post_prompt" | perl -pe "s/%(K{.*?}|k)//g")

  add-zsh-hook precmd prompt_chris1_precmd
}

prompt_chris1_precmd () {
  setopt noxtrace localoptions
  local base_prompt_expanded_no_color base_prompt_etc
  local space_left

  base_prompt_expanded_no_color=$(print -P "$base_prompt_no_color")
  base_prompt_etc=$(print -P "$base_prompt%(4~|...|)%3~")
  space_left=$(( $COLUMNS - $#base_prompt_expanded_no_color - 2 ))
  path_prompt="%B%F{$prompt_chris1_color2}%${space_left}<...<%~$prompt_newline%F{white}"
  PS1="$base_prompt$path_prompt %# $post_prompt"
  PS2="$base_prompt$path_prompt %_> $post_prompt"
  PS3="$base_prompt$path_prompt ?# $post_prompt"
}

prompt_chris1_setup "$@"







# prompt_walters_setup () {

# if [[ "$TERM" != "dumb" ]]; then
#     export PROMPT='%B%(?..[%?] )%b%n@%U%m%u> '
#     export RPROMPT="%F{${1:-green}}%~%f"
# else
#     export PROMPT="%(?..[%?] )%n@%m:%~> "
# fi

#   prompt_opts=(cr percent)
# }
